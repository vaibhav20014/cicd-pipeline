version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo "Installing dependencies..."
      - npm install
      - npm install -g mocha jest

pre_build:
  commands:
    - echo "Retrieving AWS credentials from Secrets Manager..."
    - SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id EKS_Credentials --query SecretString --output text)
    - export AWS_ACCESS_KEY_ID=$(echo $SECRET_JSON | jq -r .AWS_ACCESS_KEY_ID)
    - export AWS_SECRET_ACCESS_KEY=$(echo $SECRET_JSON | jq -r .AWS_SECRET_ACCESS_KEY)

    - echo "Configuring AWS CLI..."
    - aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
    - aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
    - aws configure set region ap-south-1

    - echo "Updating kubeconfig for EKS..."
    - aws eks update-kubeconfig --region ap-south-1 --name aws_cicd_cluster

    - echo "Verifying EKS cluster access..."
    - kubectl get nodes || { echo "EKS authentication failed"; exit 1; }

      - echo "Adding IAM role to Kubernetes config..."
      - kubectl create clusterrolebinding codebuild-admin-binding --clusterrole=cluster-admin --user=arn:aws:iam::390844759906:role/codebuild-cicd_aws-service-role || true

      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 390844759906.dkr.ecr.ap-south-1.amazonaws.com

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t cicd_aws .
      - docker tag cicd_aws:latest 390844759906.dkr.ecr.ap-south-1.amazonaws.com/cicd_aws:latest

  post_build:
    commands:
      - echo "Pushing the Docker image..."
      - docker push 390844759906.dkr.ecr.ap-south-1.amazonaws.com/cicd_aws:latest
      
      - echo "Applying Kubernetes deployment..."
      - |
        if [ ! -f deployment.yaml ]; then
          echo "Error: deployment.yaml not found!"
          exit 1
        fi
        kubectl apply -f deployment.yaml --validate=false

      - echo "Waiting for deployment to complete..."
      - |
        if ! kubectl rollout status deployment/nginx-api-pod; then
          echo "Deployment failed. Gathering debug info..."
          kubectl get deployments
          kubectl describe deployment nginx-api-pod
          kubectl get pods -o wide
          exit 1
        fi

      - echo "Deployment completed successfully!"

artifacts:
  files:
    - '**/*'
