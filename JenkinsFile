pipeline {
    agent any
    environment {
        SONAR_LOGIN = credentials('sonar-credentials-id') // Replace with your SonarQube credentials ID
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/vaibhav20014/cicd-pipeline.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') { // Replace 'SonarQube' with your SonarQube server name
                    sh """
                    sonar-scanner \
                        -Dsonar.projectKey=cicd-pipeline \
                        -Dsonar.host.url=http://103.251.252.115:9000 \
                        -Dsonar.login=${SONAR_LOGIN}
                    """
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                script {
                    sh 'docker build -t nginx-server .'
                    sh 'docker build -t backend-service ./backend-service || true' // Handle missing backend-service gracefully
                }
            }
        }
        stage('Run Docker Containers') {
            when {
                not { expression { env.BUILD_FAILURE != null } }
            }
            steps {
                script {
                    sh 'docker run -d --name nginx1 -p 8001:8000 nginx-server'
                    sh 'docker run -d --name nginx2 -p 8002:8000 nginx-server'
                }
            }
        }
        stage('Copy Files to Running NGINX Containers') {
            when {
                not { expression { env.BUILD_FAILURE != null } }
            }
            steps {
                script {
                    sh '''
                    docker cp ./index.html nginx1:/usr/share/nginx/html/index.html
                    docker cp ./index.html nginx2:/usr/share/nginx/html/index.html
                    '''
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        failure {
            echo 'Pipeline failed!'
        }
        success {
            echo 'Pipeline completed successfully!'
        }
    }
}
