version: '3'
services:
  nginx1:
    build:
      context: .
      dockerfile: Dockerfile  # Use NGINX's Dockerfile
    container_name: nginx1
    ports:
      - "8000:80"
    volumes:
      - ./Signup.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_app_network

  nginx2:
    build:
      context: .
      dockerfile: Dockerfile  # Use NGINX's Dockerfile
    container_name: nginx2
    ports:
      - "8001:80"
    volumes:
      - ./Signup.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_app_network

  my-api:
    build:
      context: .
      dockerfile: Dockerfile.node  # Use Node.js Dockerfile
    container_name: api-container
    ports:
      - "3000:3000"
    networks:
      - my_app_network
    volumes:
      - .:/app  # Bind mount the current directory

  mysql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql_server_container
    environment:
      # MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: Testdb
      MYSQL_USER: SA
      MYSQL_PASSWORD: Admin@123
    ports:
      - "3306:3306"
    networks:
      - my_app_network

networks:
  my_app_network:
    driver: bridge
