version: '3.8'

services:
  nginx1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nginx1
    ports:
      - "8000:80"
    volumes:
      - ./Signup.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_app_network
    restart: unless-stopped

  nginx2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nginx2
    ports:
      - "8001:80"
    volumes:
      - ./Signup.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_app_network
    restart: unless-stopped

  sql-server:
    image: mysql:8.0
    container_name: sql_server_container
    environment:
      MYSQL_ROOT_PASSWORD: Admin@123
      MYSQL_DATABASE: Testdb
      MYSQL_USER: sa
      MYSQL_PASSWORD: Admin@123
    ports:
      - "3306:3306"
    networks:
      - my_app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  my-api:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: api-container
    ports:
      - "3000:3000"
    networks:
      - my_app_network
    environment:
      DB_HOST: sql_server_container
      DB_PORT: 3306
      DB_USER: sa
      DB_PASSWORD: Admin@123
      DB_NAME: Testdb
    volumes:
      - .:/app
    depends_on:
      sql-server:
        condition: service_healthy


networks:
  my_app_network:
    driver: bridge
